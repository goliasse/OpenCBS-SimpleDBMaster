User of the application
1- Admin
2- Seller Hub
3- Shopkeeper
4- Customer

Channels for different users
1- Admin - Web and Android App
2- Seller Hub - Web and Android App
3- Shopkeepaer - Web and Android App
4- Customer - Android App


Payment method 
1- Cash on delivery
2- Card on delivery


Business requirements
1- Admin - Web and Android App
Android app

2- Seller Hub - Web and Android App
Android app
1- Seller hub can create the shopkeeper and allocate him an ID which will be used for login to application
2- Seller hub can create the product catalouge on behalf of a Shopkeeper
3- Seller Hub can view all the orders placed through the application to different Shopkeeper

Web 
1- Seller hub can create the shopkeeper and allocate him an ID which will be used for login to application
2- Seller hub can create the product catalouge on behalf of a Shopkeeper
3- Seller Hub can view all the orders placed through the application to different Shopkeeper

3- Shopkeeper - Web and Android App
Android app
1- Shopkeeper will be notified of the order placed to him by the customers
2- Shopkeeper will accept the order and will start preparing the order and will provide a ETA to the customer for his order fulfillment
3- Shopkeeper can reject the order and will have to stat the reason for rejection
4- Shopkeeper can update the order status
5- Shopkeeper can create the product catalouge with image, description and price.
6- Shopkeeper can cancel the individual items in a order
7- Shopkeeper should be able to provide quote, availability of the asked product by the customer
8- Shopkeeper can update the product catalouge with image, description and price.
9- Shopkeeper will login to the application with Seller ID provided by Seller Hub or Admin
Shopkeeper can define the opening and closing time for the shop from the delivery point of view.
Shopkeeper can define the dates on which shop will be closed completely
Shopkeeper should be able to update the availability of the product
While adding the product shopkeeper is suppoded to define the quantity type for the product
Shopkeeper should be having the facility of selecting the delivery partner from a dropdown who will be delivering the product to the customer.

Web
1- Shopkeeper can login to his account 
2- Shopkeeper can create the product catalouge with image, description and price
3- Shopkeeper can update the product catalouge with image, description and price

4- Customer - Android App
Android app
1- Customer can register with his mobile number, name and address
2- Customer can view all the products made available by shopkeeper for sell
3- Customer can place his order to the specified shopkeeper
4- Customer can view all the previously placed orders
5- Customer can call and SMS to shopkeeper from application itself
6- Customer can register a complaint against a order
7- Customer can track the status of the order placed
8- Customer will be notified of the status change in the order
9- If a product is not listed, he can specify the product in simple text and place the order
10- Customer can add multiple items in his cart
11- Customer can ask for the availability and quote for the product which is not listed in the app
Date and time on which a shop is closed, will not be appeared in the product search list
Customer should be able to rate and review the shopkeeper
Customer should be able to define the quantity in terms of numbers and gms.
Customer should be able to see the name and contact number of the person who will be delivering the product to him.
Customer should be able to add a message with the order being placed.


Each application will be regsitered with an application ID which will be allocated to each shopkeeper and Seller hub.
If that ID is active then only application will be active otherwise appication will not be active.
Customer can get the application link by giving a missed call on a specific mobile number and that mobile number may be owned by shopkeeper.
We need to create a separate application for this purpose which will send the link to customer number and put that number into verfied mobile number database. When customer will use that mobile number for registration, he will be able to do it straightly, no need to verify the mobile number.
Customer's mobile number will be used a his unique ID
Products will be categorised into different categories
Each product will be having a unique ID
While placing the order, customer will provide maximum acceptable date and time.
Product to be displayed will be fetched from Products table
After craeting the order, products will be fetched from Cart table.

Customer - Register
Customer will launch the application
A screen will be displayed to him asking for the mobile number
Customer entes his mobile number
His entered mobile number will be checked in verified mobile number database, if it is there then he will be displayed a screen asking for Name and Address and can register himmself.
If his mobile number is not in verified mobile number list then he will be asked to give a miss call on the specified mobile number. Once he gives the miss call, mobile number will be checked again, if it is verfied he can register himself.
Once registered, no need to login
After registration, customer can directly view product categories


Customer - Place a Order
Customer launch the application
Customer selects the product category
Customer selects the product
Customer adjusts the quantity and add the product into cart
Customer clicks on Place Order menu option
Customer is redirected to Checkout screen where he can see all the products in the cart.
Customer Selects the Payment method on chekcout screen and clicks on Place Order button.
Customer's order is sent to Shopkeeper for Review.


Order fulfillment by Shopkeeper
Respective shopkeeper will be notified of the Order.
As the shopkeeper will click on the notification, order will be opened on App with all the order information (Customer details (name, mobile, address), product list, estimated amount, order date abd time, delivery method, payment method)
Shopkeeper will enter the ETA and will acknowledge the order and will start preparing the order
As soon as shopkeeper will acknowledge the order, customer will be notified of this event.



How will the delivery boy be able to get the information about the product to be delivered? Do we need one more user to added into user of system list.
What should be the product selection strategy while displaying the product list to user from multiple shopkeepers.
what are the different order status that each order will go through in his life cycle?
Do you want to show them the list of shopkeepers to him they are placing the order? or it will be invisible and you will pick up the product, if yes, then how will you quote the best rate for the product.
will seller hub need to take some kind of government licenses like Shopkeeper need to take while registering with us?
How will the distance of Customer's current location and Shop location be determined?
What will be the behavior of system if user logs in with the same user id but on different device.
What will be the mechanism used for detecting the different device.
How will the product image download mechanism will work? Device will send all the SKUID of the product for which images are needed. Server will put all the required images in a zip file and send it to device. Device will unzip it, and will update the ProductImages table and will store the images in database.
Any propsoed mechanism for enquiring about the product which is not listed but customer feels that it may be available from shopkeeper.
Possible complaint categories while filing a complaint against a shopid for a order id ?
We need to define two type of categories, one for showing before shop selction. i.e. Shop Category and another after selcting the shop i.e. Product category. Please define initial values for both.

Different product selection strategy are
1- Lowest priced first
2- Highest ranking first
3- Nearest first

Which are the possible categories for the products to be displayed.
How are we supposed to do the screen navigation at the customer end.
1- Launch the application
2- Customer will be presented with all the possible categories
3- As soon as customer will click on a category, he will be presented with all the products in that category, product information will be showing seller information as well something similar to flipkart and customer can see all the sellers with their quoted price for that product. The first highlighted product displayed will depend on the product selection strategy used.
In that case, it will be tough to maintain the min order policy from the shopkeeper's point of view. Because an order of 10 products may contain 5 sellers.
OR
As soon as customer will click on Category, he will be presented with all the sellers of that category and clicking on seller will display the products offered by him. Product will be displayed with all the required information and customer can see all the sellers with their quoted price for that product.


Information needs to be captured while adding a Product
Product name
Product registration status
Product description
Product category (It will be a dropdown while adding a product)
Product availability (In stock or out of stock)
Product order unit (gms, kgs, nos)
product price
Product image name
Product added by (it can be a shopkeeper ID or seller hub ID)
Product added for (Shop ID to which this product is associated)
Product creation timestamp

After adding the product into database, a SKU ID will be generated

Information needs to be captured while adding a Shopkeeper
Shop name
Shop registration status
Shop Application ID
Shop owner name
Shop address area/sector
Shop address city
Shop address pincode
Shop address state
Shop address country
Shop address milestone/identification point
Shop closing time
Shop opening time
Shop owner contact number
Shop support contact number
Shop email id
Shop longitude
Shop lattitude
Shop minimum accepted order
Shop owner ID type
Shop owner ID number
Shop TAN Number
Shop owner ID document name
Shop TAN document name
Shop owner ID verified
Shop TAN Document verified
Shop created by
Shop created for
Shop creation timestamp

After successfully adding the shop to database, a shop id will be generated in form of SP______.
A folder will be created at the server end named as generated Shop ID, which will be having some subfolders for string different documents related to shop.
Like - Product images, ID Documents
While storing ID document will be named as ID Type_ID Number_Shop ID

Information needs to be captured while adding a Customer
Customer name
Customer registration status
Customer mobile number
customer mobile verified
Customer address
Customer as a business
Customer creation timestamp

Customer mobile no will be used as their user id for logging into system

Information needs to be captured while adding a Seller Hub
SellerHub name
SellerHub Application ID
SellerHub registration status
SellerHub mobile
SellerHub address
SellerHub individual or business
SellerHub ID type
SellerHub ID number
SellerHub ID document name
SellerHub TAN number
SellerHub TAN document name
SellerHub created by
SellerHub creation timestamp

After successfully adding the SellerHub to database, a SellerHub id will be generated in form of SH______.
A folder will be created at the server end named as generated SellerHub ID, which will be having some subfolders for storing different documents related to SellerHub
Like - Product images, ID Documents
While storing, ID document will be named as ID Type_ID Number_SellerHub ID

Information needs to be captured while adding a Order
Order Placed By
Order Placed To
Order creation timestamp
Order last update timestamp
order quoted amount
Order invoice amount
order expected delivery timestamp
order cart ID
Order status
Order being shipped by
Order custom message


Information needs to be captured while adding a Delivery Person
DeliveryPerson Shop ID or Seller Hub ID
DeliveryPerson registration status
DeliveryPerson Name
DeliveryPerson Mobile Number
DeliveryPerson Resedential address
DeliveryPerson ID Type
DeliveryPerson ID number
DeliveryPerson ID document name

After successfully adding the DeliveryPerson to database, a DeliveryPerson id will be generated in form of DP______.
A folder will be created at the server end named as generated  DeliveryPerson ID, which will be having some subfolders for storing different documents related to DeliveryPerson
Like - ID Documents
While storing, ID document will be named as ID Type_ID Number_DeliveryPerson ID

Information needs to be captured while adding a Cart
Cart ID
Cart Product ID
Cart Product Price
Cart Product quantity
Cart product order unit
Cart product availability

Information needs to be captured while Login
Login Username
Login Password
Login android loggedIn
Login web loggedIn

Information needs to be captured for User Logs
UserLog username
UserLog Login Timestamp

A table for storing the OTP

Application ID of the app will be Shop ID or SellerHub ID itself.

Workflow

1- Customer register himself with a new mobile number which was never used previously (New mobile new device)
Business Workflow
Start
Customer will launch the application
A 'Register' screen will be displayed to him asking for the mobile number, Name and Resedential Address (All are manadatory fields)
Customer enters all the required details
Customer clicks on Register button
A OTP will be sent to his registered mobile number
Customer is redirected to 'Verify Mobile Number' screen
If the entered mobile is same as device SIM number, then application will try to detect the OPT by itself.
If the entered number is different from device SIM number, then user will need to enter the OTP by himself.
Customer clicks on Verify button
After successful verfication of mobile number, user will be redirected to Home screen, which will be displaying all the possible shop categories.
No user specific data will be fetched and synced with device. (Success = 1)
End

Technical flow
Actions to be taken after click on Register button
Device will call Register_user service with Input parameters as
Mobile number
This service will do the following operations
Generate the OTP and Save the OTP in OTP table
If failure, Send 0 in response and Exit
Send a OTP to Customer mobile number with the help of Send_SMS service
If failure, Send 0 in response and Exit
If both are success, Send 1 in response

At deive end
When Response is 0
Show an error message to customer

When Response is 1
Do nothing additional and redirect the customer to Verify page

Actions to be taken after click on Verify button
Device will call Verify_mobile service with input parameters as
Application ID
Device ID
Mobile number
Name
Resedential address
OTP
Verify the user OTP
If OTP is correct, 
Save or Update the user details in Custoemr table as Verified to 1, depending upon whether a record exists with same mobile number or not
If failure ocurred while updating the data in Customer table, Send response as 0
If OTP not correct, Send Response as -1 and Exit the process
Check whether the Application ID is Enabled or not in the respective table e.g if Application ID is SP* then it is ShopID, if it is SH* then it is SellerHub id.
If Application ID is not enabled 
Fetch the SellerHUb's support contact number and put it in response
Send -99 in response and exit the process
If application ID is enabled
Check for Mobile number and Device ID combination in database, if it is not found
Success, Send 1 as response and Exit 
If it is found
Succes, Send 2 as response amd Exit

At Device end.
Save these below details in local device tables and do not fetch any other details from web database
Settings table
Application ID
Device ID
First Login
First Login timestamp

Personal information table
Mobile number
Name
Resedential address
Verified

When Response is 0
Show an error message to custoemr

When Response is 1
Do nothing additional and redirect the customer to Home page

When response is 2
Fetch user specific details from web database (Orders, Addresses, Complaints) and save these into local device tables and redirect the customer to Home page

when resposne is -99
Show an error message to customer which includes the sellerhub's csupport contact number. so that customer could reach to him.

2- Customer register himself with a already used mobile number which was used previously on a new device (Existing mobile new device)
Start
Same as above
End

3- Customer register himself with a new mobile number which was used previously on a previously used device (New mobile existing device)
Start
Same as above
End

4- Customer register himself with a already used mobile number on the same device used previously (Existing mobile existing device)
Start
Customer will launch the application
A 'Register' screen will be displayed to him asking for the mobile number, Name and Resedential Address (All are manadatory fields)
Customer enters all the required details
Customer clicks on Register button
A OTP will be sent to his registered mobile number
Customer is redirected to 'Verify Mobile Number' screen
If the entered mobile is same as device SIM number, then application will try to detect the OPT by itself.
If the entered number is different from device SIM number, then user will need to enter the OTP by himself.
Customer clicks on Verify button.
After successful verfication of mobile number, user will be redirected to Home screen, which will be displaying all the possible shop categories.
All the user specific data will be fetched and synced with device i.e. Addresses, Previous Orders, Complaints, Favrouite Shops (Success = 2)
End

Technical workflow
Same as above, in this case, Success Response 2 will be sent from API
