User of the application
1- Admin
2- Seller Hub
3- Shopkeeper
4- Customer

Channels for different users
1- Admin - Web and Android App
2- Seller Hub - Web and Android App
3- Shopkeepaer - Web and Android App
4- Customer - Android App


Payment method 
1- Cash on delivery
2- Card on delivery


Business requirements
1- Admin - Web and Android App
Android app

2- Seller Hub - Web and Android App
Android app
1- Seller hub can create the shopkeeper and allocate him an ID which will be used for login to application
2- Seller hub can create the product catalouge on behalf of a Shopkeeper
3- Seller Hub can view all the orders placed through the application to different Shopkeeper

Web 
1- Seller hub can create the shopkeeper and allocate him an ID which will be used for login to application
2- Seller hub can create the product catalouge on behalf of a Shopkeeper
3- Seller Hub can view all the orders placed through the application to different Shopkeeper

3- Shopkeeper - Web and Android App
Android app
1- Shopkeeper will be notified of the order placed to him by the customers
2- Shopkeeper will accept the order and will start preparing the order and will provide a ETA to the customer for his order fulfillment
3- Shopkeeper can reject the order and will have to stat the reason for rejection
4- Shopkeeper can update the order status
5- Shopkeeper can create the product catalouge with image, description and price.
6- Shopkeeper can cancel the individual items in a order
7- Shopkeeper should be able to provide quote, availability of the asked product by the customer
8- Shopkeeper can update the product catalouge with image, description and price.
9- Shopkeeper will login to the application with Seller ID provided by Seller Hub or Admin
Shopkeeper can define the opening and closing time for the shop from the delivery point of view.
Shopkeeper can define the dates on which shop will be closed completely
Shopkeeper should be able to update the availability of the product
While adding the product shopkeeper is suppoded to define the quantity type for the product
Shopkeeper should be having the facility of selecting the delivery partner from a dropdown who will be delivering the product to the customer.

Web
1- Shopkeeper can login to his account 
2- Shopkeeper can create the product catalouge with image, description and price
3- Shopkeeper can update the product catalouge with image, description and price

4- Customer - Android App
Android app
1- Customer can register with his mobile number, name and address (DONE)
2- Customer can view all the products made available by shopkeeper for sell ()
3- Customer can place his order to the specified shopkeeper
4- Customer can view all the previously placed orders
5- Customer can call and SMS to shopkeeper from application itself
6- Customer can register a complaint against a order
7- Customer can track the status of the order placed
8- Customer will be notified of the status change in the order
9- If a product is not listed, he can specify the product in simple text and place the order
10- Customer can add multiple items in his cart
11- Customer can ask for the availability and quote for the product which is not listed in the app
Date and time on which a shop is closed, will not be appeared in the product search list
Customer should be able to rate and review the shopkeeper
Customer should be able to define the quantity in terms of numbers and gms.
Customer should be able to see the name and contact number of the person who will be delivering the product to him.
Customer should be able to add a message with the order being placed.
Customer should be able to reorder the same order from the prev order list.

Each application will be regsitered with an application ID which will be allocated to each shopkeeper and Seller hub.
If that ID is active then only application will be active otherwise appication will not be active.
Customer can get the application link by giving a missed call on a specific mobile number and that mobile number may be owned by shopkeeper.
We need to create a separate application for this purpose which will send the link to customer number and put that number into verfied mobile number database. When customer will use that mobile number for registration, he will be able to do it straightly, no need to verify the mobile number.
Customer's mobile number will be used a his unique ID
Products will be categorised into different categories
Each product will be having a unique ID
While placing the order, customer will provide maximum acceptable date and time.
Product to be displayed will be fetched from Products table
After craeting the order, products will be fetched from Cart table.

Customer - Register
Customer will launch the application
A screen will be displayed to him asking for the mobile number
Customer entes his mobile number
His entered mobile number will be checked in verified mobile number database, if it is there then he will be displayed a screen asking for Name and Address and can register himmself.
If his mobile number is not in verified mobile number list then he will be asked to give a miss call on the specified mobile number. Once he gives the miss call, mobile number will be checked again, if it is verfied he can register himself.
Once registered, no need to login
After registration, customer can directly view product categories


Customer - Place a Order
Customer launch the application
Customer selects the product category
Customer selects the product
Customer adjusts the quantity and add the product into cart
Customer clicks on Place Order menu option
Customer is redirected to Checkout screen where he can see all the products in the cart.
Customer Selects the Payment method on chekcout screen and clicks on Place Order button.
Customer's order is sent to Shopkeeper for Review.


Order fulfillment by Shopkeeper
Respective shopkeeper will be notified of the Order.
As the shopkeeper will click on the notification, order will be opened on App with all the order information (Customer details (name, mobile, address), product list, estimated amount, order date abd time, delivery method, payment method)
Shopkeeper will enter the ETA and will acknowledge the order and will start preparing the order
As soon as shopkeeper will acknowledge the order, customer will be notified of this event.



How will the delivery boy be able to get the information about the product to be delivered? Do we need one more user to added into user of system list.
What should be the product selection strategy while displaying the product list to user from multiple shopkeepers.
what are the different order status that each order will go through in his life cycle?
Do you want to show them the list of shopkeepers to him they are placing the order? or it will be invisible and you will pick up the product, if yes, then how will you quote the best rate for the product.
will seller hub need to take some kind of government licenses like Shopkeeper need to take while registering with us?
How will the distance of Customer's current location and Shop location be determined?
What will be the behavior of system if user logs in with the same user id but on different device.
What will be the mechanism used for detecting the different device.
How will the product image download mechanism will work? Device will send all the SKUID of the product for which images are needed. Server will put all the required images in a zip file and send it to device. Device will unzip it, and will update the ProductImages table and will store the images in database.
Any propsoed mechanism for enquiring about the product which is not listed but customer feels that it may be available from shopkeeper.
Possible complaint categories while filing a complaint against a shopid for a order id ?
We need to define two type of categories, one for showing before shop selction. i.e. Shop Category and another after selcting the shop i.e. Product category. Please define initial values for both.
How will we determine the serviceable area for a Shop, on the basis of Customer's and Shop's Map locations or on the basis of Specifically specified service area by shopkeeper
Multilple shops means multiple orders ? Y/N
Business rule for displaying the Product category screen or not? there may be the case when shop is having very few products to be displayed.
Product price and effective price columns needs to be differentiated in Products table

Different product selection strategy are
1- Lowest priced first
2- Highest ranking first
3- Nearest first

Which are the possible categories for the products to be displayed.
How are we supposed to do the screen navigation at the customer end.
1- Launch the application
2- Customer will be presented with all the possible categories
3- As soon as customer will click on a category, he will be presented with all the products in that category, product information will be showing seller information as well something similar to flipkart and customer can see all the sellers with their quoted price for that product. The first highlighted product displayed will depend on the product selection strategy used.
In that case, it will be tough to maintain the min order policy from the shopkeeper's point of view. Because an order of 10 products may contain 5 sellers.
OR
As soon as customer will click on Category, he will be presented with all the sellers of that category and clicking on seller will display the products offered by him. Product will be displayed with all the required information and customer can see all the sellers with their quoted price for that product.


Information needs to be captured while adding a Product
Product name
Product registration status
Product description
Product category (It will be a dropdown while adding a product)
Product availability (In stock or out of stock)
Product order unit (gms, kgs, nos)
product price
Product image name
Product added by (it can be a shopkeeper ID or seller hub ID)
Product added for (Shop ID to which this product is associated)
Product creation timestamp

After adding the product into database, a SKU ID will be generated

Information needs to be captured while adding a Shopkeeper
Shop name
Shop registration status
Shop Application ID
Shop owner name
Shop address area/sector
Shop address city
Shop address pincode
Shop address state
Shop address country
Shop address milestone/identification point
Shop closing time
Shop opening time
Shop owner contact number
Shop support contact number
Shop email id
Shop longitude
Shop lattitude
Shop minimum accepted order
Shop owner ID type
Shop owner ID number
Shop TAN Number
Shop owner ID document name
Shop TAN document name
Shop owner ID verified
Shop TAN Document verified
Shop created by
Shop created for
Shop creation timestamp

After successfully adding the shop to database, a shop id will be generated in form of SP______.
A folder will be created at the server end named as generated Shop ID, which will be having some subfolders for string different documents related to shop.
Like - Product images, ID Documents
While storing ID document will be named as ID Type_ID Number_Shop ID

Information needs to be captured while adding a Customer
Customer name
Customer registration status
Customer mobile number
customer mobile verified
Customer address
Customer as a business
Customer creation timestamp

Customer mobile no will be used as their user id for logging into system

Information needs to be captured while adding a Seller Hub
SellerHub name
SellerHub Application ID
SellerHub registration status
SellerHub mobile
SellerHub address
SellerHub individual or business
SellerHub ID type
SellerHub ID number
SellerHub ID document name
SellerHub TAN number
SellerHub TAN document name
SellerHub created by
SellerHub creation timestamp

After successfully adding the SellerHub to database, a SellerHub id will be generated in form of SH______.
A folder will be created at the server end named as generated SellerHub ID, which will be having some subfolders for storing different documents related to SellerHub
Like - Product images, ID Documents
While storing, ID document will be named as ID Type_ID Number_SellerHub ID

Information needs to be captured while adding a Order
Order Placed By
Order Placed To
Order creation timestamp
Order last update timestamp
order quoted amount
Order invoice amount
order expected delivery timestamp
order cart ID
Order status
Order being shipped by
Order custom message


Information needs to be captured while adding a Delivery Person
DeliveryPerson Shop ID or Seller Hub ID
DeliveryPerson registration status
DeliveryPerson Name
DeliveryPerson Mobile Number
DeliveryPerson Resedential address
DeliveryPerson ID Type
DeliveryPerson ID number
DeliveryPerson ID document name

After successfully adding the DeliveryPerson to database, a DeliveryPerson id will be generated in form of DP______.
A folder will be created at the server end named as generated  DeliveryPerson ID, which will be having some subfolders for storing different documents related to DeliveryPerson
Like - ID Documents
While storing, ID document will be named as ID Type_ID Number_DeliveryPerson ID

Information needs to be captured while adding a Cart
Cart ID
Cart Product ID
Cart Product Price
Cart Product quantity
Cart product order unit
Cart product availability

Information needs to be captured while Login
Login Username
Login Password
Login android loggedIn
Login web loggedIn

Information needs to be captured for User Logs
UserLog username
UserLog Login Timestamp

A table for storing the OTP

Application ID of the app will be Shop ID or SellerHub ID itself.

Service specification
Web services should be able to handle Unicode data.
Web service should be implementing a proper error handling mechanism by which admin should be able to track the error and provide the suitable solution to user.
When there is a error occurred in any of the web service the following details  should be saved in a persistent storage e.g. database, text file.
Service name
Request
userid
Response sent
Exception stack trace
Each service will be having  a unique code which will be sent to device if error occurred in that service.

Workflow

1- Customer register himself with a new mobile number which was never used previously (New mobile new device)
Business Workflow
Start
•	Customer will launch the application
•	A 'Register' screen will be displayed to him asking for the mobile number, Name and Resedential Address (All are manadatory fields)
•	Customer enters all the required details
•	Customer clicks on Register button
•	A OTP will be sent to his registered mobile number
•	Customer is redirected to 'Verify Mobile Number' screen
•	If the entered mobile is same as device SIM number, then application will try to detect the OPT by itself.
•	If the entered number is different from device SIM number, then user will need to enter the OTP by himself.
•	Customer clicks on Verify button
•	After successful verfication of mobile number, user will be redirected to Home screen, which will be displaying all the possible shop categories.
•	No user specific data will be fetched and synced with device. (Success = 1)
End

Technical flow
•	Actions to be taken after click on Register button
•	Device will call Register_user service with Input parameters as
•	Mobile number
•	This service will do the following operations
•	Generate the OTP and Save the OTP in OTP table
•	If failure, Send 0 in response and Exit
•	Send a OTP to Customer mobile number with the help of Send_SMS service
•	If failure, Send 0 in response and Exit
•	If both are success, Send 1 in response

At device end
•	When Response is 0
•	Show an error message to customer

•	When Response is 1
•	Save Mobile number in Settings or Personal Information table on Device
•	And redirect the customer to Verify page

Actions to be taken after click on Verify button
Device will call Verify_mobile service with input parameters as
•	Application ID
•	Device ID
•	Mobile number
•	Name
•	Residential address
•	OTP
•	Verify the user OTP
•	If OTP is correct, 
•	Save or Update the user details in Customer table as Verified to 1, depending upon whether a record exists with same mobile number or not
•	If failure occurred while updating the data in Customer table, Send responseCode as 0
•	If OTP not correct, Send responseCode as -1 and Exit the process
•	Check whether the Application ID is Enabled or not in the respective table e.g if Application ID is SP* then it is ShopID, if it is SH* then it is SellerHub id.
•	If Application ID is not enabled 
•	Fetch the SellerHUb's support contact number and put it in response
•	Send -99 in response and exit the process
•	If application ID is enabled
•	Check for Mobile number and Device ID combination in database, if it is not found
•	Success, Send 1 as response and Exit 
•	If it is found
•	Success, Send 2 as response and Exit

At Device end.
Save these below details in local device tables and do not fetch any other details from web database
Settings table
Application ID
Device ID
First Login
First Login timestamp

Personal information table
Mobile number
Name
Residential address
Verified

•	When Response is 0
•	Show an error message to customer

•	When Response is 1
•	Do nothing additional and redirect the customer to Home page

•	When response is 2
•	Fetch user specific details from web database (Orders, Addresses, Complaints) and save these into local device tables and redirect the customer to Home page

•	when response  is -99
•	Show an error message to customer which includes the sellerhub's support contact number. so that customer could reach to him.

2- Customer register himself with a already used mobile number which was used previously on a new device (Existing mobile new device)
Start
Same as above
End

3- Customer register himself with a new mobile number which was used previously on a previously used device (New mobile existing device)
Start
Same as above
End

4- Customer register himself with a already used mobile number on the same device used previously (Existing mobile existing device)
Start
Customer will launch the application
A 'Register' screen will be displayed to him asking for the mobile number, Name and Residential Address (All are mandatory fields)
Customer enters all the required details
Customer clicks on Register button
A OTP will be sent to his registered mobile number
Customer is redirected to 'Verify Mobile Number' screen
If the entered mobile is same as device SIM number, then application will try to detect the OPT by itself.
If the entered number is different from device SIM number, then user will need to enter the OTP by himself.
Customer clicks on Verify button.
After successful verification of mobile number, user will be redirected to Home screen, which will be displaying all the possible shop categories.
All the user specific data will be fetched and synced with device i.e. Addresses, Previous Orders, Complaints, Favorite Shops (Success = 2)
End

Technical workflow
Same as above, in this case, Success Response 2 will be sent from API


5 - When a verified customer launch the application
Business Flow
•	Customer launch the application
•	Execute 'No internet connection' check workflow
•	Customer is directly redirected to Home screen

Technical workflow (Web)
•	Execute 'No internet connection' check workflow
•	Device checks whether the verified parameter in Settings table is set or not if it is set to 1 then
•	Device calls Verify_ApplicationID service with the input parameters as
•	Application ID
•	If ApplicationID is enabled then
•	Send responseCode as 1
•	If ApplicationID is not enabled then
•	Send responseCode as -99

Technical workflow (Device)
•	Execute 'No internet connection' check workflow
•	If Response is 1
•	Redirect the user to Home screen
•	If Response is -99 then
•	Redirect the customer to Application blocked error screen containing SellerHub's Support contact number.

6 - When a new customer launch the application
Business flow
•	Customer launch the application
•	Execute 'No internet connection' check workflow

•	Customer is redirected to Registration screen

Technical workflow (Web)
Device checks whether the verified parameter in Settings table is set or not if it is null or set to 0 then
No web API calls

Technical workflow (Device)
•	Device checks if the verified parameter in Settings table is set to null then
•	Redirect the customer to Registration screen

•	Device checks if the verified parameter in Settings table is set 0 then
•	Redirect the customer to Verify Mobile screen

7 - Customer should be able to see a Error screen when there is no internet connection on device
Business workflow
•	Customer launch the application
•	Device is not connected to internet
•	Customer is redirected to 'No Internet Connection' error screen

Technical workflow (Web)
NA

Technical workflow (Device)
•	Device checks for internet connectivity
•	If it is there then 
•	Do the additional check and perform appropriate action

•	If it is not there then
•	Customer is redirected to 'No internet connection' screen


8 - Registered customer should be able to see the Home screen with all the Shop categories populated
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in real time from web server.

Technical workflow (Web)
•	Device will call the Fetch_Shop_Categories service with input parameters as
•	LastSyncShopCategories (Fetched from LastSynced table from device)
•	Service will send all the unique records of ShopCategory column in Shop table which was inserted or updated after or on LastSyncShopCategories time in response
•	If success, send responseCode as 1
•	If failure, send responseCode as 0

Technical workflow (Device)
•	If responseCode is 1 then
•	Populate the Home screen with ShopCategories data received in response from API
•	Save that data in local ShopCategories table
•	Update the LastSync table record for ShopCategory table with the current timestamp

•	If responseCode is 0 then
•	Redirect the user to Error screen

9 - Registered customer should be able to see all the Shops registered for that category when clicked on a Category on Home screen
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in realtime from web server.
•	Customer clicks on a Shop category
•	Customer is redirected to Shop list Screen displaying all the shop listed in that area

Technical workflow (Web)
•	Device will call the Fetch_Shops service with input parameters as
•	LastSyncShop (Fetched from LastSynced table from device)
•	Selected Shop Category
•	Map location or Area of the customer
•	Service will send all the records in Shop table satisfying the criteria (Category and Location) which was inserted or updated after or on LastSyncShop time in response
•	If success, send responseCode as 1
•	If failure, send responseCode as 0

Technical workflow (Device)
•	If responseCode is 1 then
•	Populate the Shops screen with Shops data received in response from API
•	Save that data in local Shop table
•	Update the LastSync table record for Shop table with the current timestamp

•	If responseCode is 0 then
•	Redirect the user to Error screen

10 - Registered customer should be able to see all the Product categories in which selected shop is having the products listed
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in realtime from web server.
•	Customer clicks on a Shop category
•	Customer is redirected to Shop list Screen displaying all the shop listed in that area
•	Customer clicks on a Shop
•	Customer is redirected to Product Category screen having displayed all the product categories in which shop is having the products listed

Technical workflow (Web)
•	Device will call the Fetch_Product_Categories service with input parameters as
•	LastSyncProductCategories (Fetched from LastSynced table from device)
•	Selected Shop ID
•	Service will send all the ProductCategories records in Shop table satisfying the criteria (Category and Location) which was inserted or updated after or on LastSyncShop time in response
•	If success, send responseCode as 1
•	If failure, send responseCode as 0

Technical workflow (Device)
•	If responseCode is 1 then
•	Populate the Shops screen with Shops data received in response from API
•	Save that data in local Shop table
•	Update the LastSync table record for Shop table with the current timestamp
•	If responseCode is 0 then
•	Redirect the user to Error screen

11 - Registered customer should be able to see all the Products of Selected Category offered by Selected Shop on Products screen
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in realtime from web server.
•	Customer clicks on a Shop category
•	Customer is redirected to Shop list Screen displaying all the shop listed in that area for Selected category
•	Customer clicks on a Shop
•	Customer is redirected to Product Category screen having displayed all the product categories in which shop is having the products listed
•	Customer clicks on a Product Category
•	Customer is redirected to Product screen displaying all the Active Products offered by Selected Shop under that product category

Technical workflow (Web)
•	Device will call the Fetch_Products service with input parameters as
•	LastSyncProducts (Fetched from LastSynced table from device)
•	Selected Shop ID
•	Selected ProductCategory
•	Service will send all the Product records in Products table satisfying the criteria (Shop ID, Category and Status) which was inserted or updated after or on LastSyncProducts time in response
•	If success, send responseCode as 1
•	If failure, send responseCode as 0

Technical workflow (Device)
•	If responseCode is 1 then
•	Populate the Products screen with Products data received in response from API
•	Save that data in device's Product table
•	Update the LastSync table record for Products table with the current timestamp
•	Exclude the SKUIDs for which images are available in device in ProductImages table
•	Call the Fetch_Product_Images service with the remaining SKUID for which image is not available in device
•	Update the ProductImages table with those SKUID for which images has been fetched from the server
•	If responseCode is 0 then
•	Redirect the user to Error screen
•	If there is an error occurred while fetching the images from server, then also display the Product screen without images.

12 - Customer should be able to specify the desired quantity to be ordered on Product Screen
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in realtime from web server.
•	Customer clicks on a Shop category
•	Customer is redirected to Shop list Screen displaying all the shop listed in that area for Selected category
•	Customer clicks on a Shop
•	Customer is redirected to Product Category screen having displayed all the product categories in which shop is having the products listed
•	Customer clicks on a Product Category
•	Customer is redirected to Product screen displaying all the Active Products offered by Selected Shop under that product category
•	Customer specifies the unit and quantity to be purchased and as soon as the user will specify the quantity, product will be added to cart.
•	if multiple units of same products are added then overall count reflects the no of units added.


Technical workflow (Web)
NA - while adding the product to cart, no action will be taken at web server end.

Technical workflow (Device)
•	Update the Intermittent_Cart table in device database for the products for which a quantity has been specified.

13 - Customer Places order by clicking on Place order button on Products screen after specifying the quantity to be purchased
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in realtime from web server.
•	Customer clicks on a Shop category
•	Customer is redirected to Shop list Screen displaying all the shop listed in that area for Selected category
•	Customer clicks on a Shop
•	Customer is redirected to Product Category screen having displayed all the product categories in which shop is having the products listed
•	Customer clicks on a Product Category
•	Customer is redirected to Product screen displaying all the Active Products offered by Selected Shop under that product category
•	Customer specifies the unit and quantity to be purchased and as soon as the user will specify the quantity, product will be added to cart.if multiple units of same products are added then overall count reflects the no of units added.
•	Customer clicks on Place Order button
•	Customer is redirected to Checkout screen
•	Customer adjusts the quantity to be ordered
•	Customer specifies the Payment method, Delivery method, Maximum acceptable time of delivery


Technical workflow (Web)
NA - After clicking on Place order button, no action will be taken at web server end.

Technical workflow (Device)
•	Display the Products fetched from Intermittent_Cart table on the CheckOut screen
•	Display the Total amount of the products
•	Display the delivery charges as per specified by shop
•	Display the Available payment methods
•	Display the Available delivery methods
•	Display the total no of products added into cart
•	Display the total no of units added into cart

14 - Customer Check Out the cart by clicking on CheckOut button on CheckOut screen
Business Workflow
•	Customer launch the application
•	Customer is redirected to Home Screen which will display all the Shop categories fetched in realtime from web server.
•	Customer clicks on a Shop category
•	Customer is redirected to Shop list Screen displaying all the shop listed in that area for Selected category
•	Customer clicks on a Shop
•	Customer is redirected to Product Category screen having displayed all the product categories in which shop is having the products listed
•	Customer clicks on a Product Category
•	Customer is redirected to Product screen displaying all the Active Products offered by Selected Shop under that product category
•	Customer specifies the unit and quantity to be purchased and as soon as the user will specify the quantity, product will be added to cart.if multiple units of same products are added then overall count reflects the no of units added.
•	Customer clicks on Place Order button
•	Customer is redirected to Checkout screen
•	Customer adjusts the quantity to be ordered
•	Customer specifies the Payment method, Delivery method, Maximum acceptable time of delivery
•	Customer Clicks on Checkout button
•	Customer is redirected to Order Summary status Which will display required order details.
•	Order Id
•	Order Status
•	Ordered Cart Details 

Technical workflow (Web)
•	Device will call the Place_a_order service with the following input parameters
•	Shop ID
•	Customer ID
•	Cart Deatils
•	Service will insert a record in Order table with status as "Ordered" and will generate the order id
•	Cart details with this Order Id will be saved in Cart table
•	If success, send responseCode as 1 and Send OrderID in response
•	If failure, send responseCode as 0

Technical workflow (Device)
•	Final cart details will be saved in the device in Intermittent_Cart table before calling the Place_a_order Service
•	If responseCode received is 1
•	Display the Order details on Order Summary screen with Received Order ID in response

•	If responseCode received is 0
•	Display Error screen to the customer

15 - Shopkeeper and SellerHub should receive a notification and SMS for every new order placement to him
Business workflow
•	As soon as the Customer successfully places the order, Shopkeeper and SellerHub gets an notification on his device.
•	As soon as the Customer successfully places the order, Shopkeeper and SellerHub receives an SMS on his mobile number.
•	Clicking on that Notification will redirect the user to Review Order screen

Technical workflow (Web)
•	Device will be polling Fetch_Order service on a specified interval of time with following input parameters
•	ShopID
•	Order Status to be looked upon - Ordered
•	Service will fetch and send in response all the order details and cart details satisfying the given criteria (Shop ID and Order Status)
•	If Success, send responseCode as 1
•	If Failure, send responseCode as 0
	
Technical workflow (Device)
•	One separate notification will be sent for each order with status as Ordered
•	Device will save the response received from service in local Order and Cart table.
•	When customer will click on notification, data will be fetched from local Order and Cart table

Note - ItemInStock, OrderedQuantity, AvailableQuantity column need to be added in Cart table, 
AcceptedExpectedDeliveryTime, SuggestedDeliveryTime, AcceptedSuggestedDeliveryTime, CartUpdatedWhileReview in Order table
16 - Shopkeeper reviews and confirms the order as is whatever was put by customer into that order
Business Flow
•	Shopkeeper clicks on the New order notification
•	Shopkeeper is redirected to Review Order screen with Confirm and Update button
•	Shopkeeper reviews the ordered items and Maximum acceptable delivery time.
•	Shopkeeper clicks on Confirm button and start preparing the order for delivery.
•	Shopkeeper is redirected to New Orders screen where he can see all the new orders pending for his confirmation

Technical workflow (Web)
•	Device calls the Confirm_Original_Order service with the following input parameters
•	OrderId
•	Order status as - Confirmed
•	Cart status as - Original
•	Service updates the order status as 'Confirmed' in Order table
•	If Failure, send responseCode as 0 and Exit
•	If Success
•	Service updates the Cart table, Copy the OrderedQuantity column value to AvailableQuantity column value and ItemInStock as Y for that OrderId
•	If Success, send responseCode as 1 Exit
•	If Failure, send responseCode as 0 and Exit

Technical workflow (Device)
•	If responseCode is 1
•	Update the OrderId as Confirmed in local Order table 
•	Update Cart table in local device, Copy the OrderedQuantity column value to AvailableQuantity column value and ItemInStock as Y for that OrderId
•	If sucess, redirect the customer to New Orders screen
•	If Failure, redirect him to Error screen

	
17 - Customer should be able to get a notification and SMS on his device when his order is confirmed by Shopkeeper
Business Flow
•	Customer receives a notification when shopkeeper confirms his order and his order is being processed by him.
•	Customer receives an SMS regarding the same

Technical workflow (Web)
•	Customer device is polling Fetch_Order service with input parameters as
•	Customer ID
•	Order status as - Confirmed
•	LastSyncOrder timestamp from LastSync table
•	Service will send all the orderids in response satisfying all the conditions (Customer ids, Order Status, Updated after LastSyncOrder timestamp)
•	If success, send responseCode as 1
•	If Failure, send responseCode as 0

Technical workflow (Device)
•	If responseCode is 1
•	Device will display a notification for each order id retrieved in API response
•	Device will update the order status in local Order table as Confirmed for all order ids
•	If responseCode is 0
•	Redirect the customer to Error screen

18 - Clicking on Confirm Order notification should redirect the user to Order Details screen
Business workflow	
•	Customer Clicks on Order Confirmation notification.
•	Which redirects him to Order Details screen displaying all the order details and cart details with Cancel button
Technical workflow (Web)
NA
Technical workflow (Device)
Device will retrieve all the required details from Local Order and Cart tables on device and display on Order Details screen



19 - Shopkeeper should be able to update the order status to "Ready for shipment" and assign a DeliveryPerson to the order when he has prepared the order and order is ready for shipment. DeliveryPerson should be notified of it.
Business Flow
When shopkeeper has prepared the customer agreed order. He should be able to - 
Change the order status to "Ready for shipment".
Assign a delivery person to order for shipment
Technical workflow (Web)
Device should call update_order_status service with the following parameters
OrderId
OrderStatus
DeliveryPersonId
Service will update the order status to "Ready for shipment" in Order table.
Service will push a notification to corresponding DeliveryPerson regarding the order status
Service will send an SMS to corresponding DeliveryPerson regarding the order status
If success, then send status as 1
If failure, then send status as 0

Technical workflow (Device)
if status is 1
Display the success message to Shopkeeper
DeliveryPerson should have received the notification regarding the Order to be delivered
if status is 0
Display the error screen to user

21 - DeliveryPerson should be able to view Order Details and Shop Details on Order Details screen when he clicks on the notification sent to him after updating the order status to "Ready for shipment".
Business Flow
DeliveryPerson receives a notification when an order has been assigned to him for delivery.
DeliveryPerson clicks on notification received.
DeliveryPerson is redirected to Order details screen which displays the Order details and shop details.
Technical workflow (Web)
Device calls the Fetch_Order_Details service with the following input parameters
Orderid
Service fetches all the required Order details and shop details from the respective tables and send in response.
If success, send status as 1
If failure, send status as 0

Technical workflow (Device)
If status is 1
Display Order details and Shop details to user
If status is 0
Display error screen to user

22 - Shopkeeper should be able to update the order status to "Shipped" when order has been picked up by DeliveryPerson for delivery. Customer should be notified of this order status change to "Shipped".
Business Flow
Order has been picked up by DeliverPerson for delivery.
Shopkeeper should be able to update order status to 'Shipped'
Customer should receive a notification regarding this order status change.
Technical workflow (Web)
Device call the Update_order_status service with following input parameters.
OrderId
Order Status
Service updates the order status in Order table.
Service pushes a notification to customer id associated with order id regarding the order status change.
If success, send status as 1
If failure, send status as 0
Technical workflow (Device)
If status is 1
Shopkeeper should get a success message
Customer should receive notification regarding the order status change
If status is 0
Shopkeeper should be displayed a error screen

24 - Customer should be able to see the order details and Delivery person details when clicking on order "Shipped" notification.
Business Flow
Customer receives a notification on his device regarding the order status change
Customer clicks on that notification
Customer is redirected to Order Details screen which displays order details and DeliverPerson details on the screen.
Technical workflow (Web)
Device calls Fetch_Order_Details service with the following input parameters
OrderID
Service sends the OrderDetails, DeliverPerson details in response back to customer
If success, send status as 1
If failure, send status as 0

Technical workflow (Device)
If status is 1
Display order details screen with DeliverPerson details on screen
If status is 0
Shopkeeper should be displayed an error screen

25 - DeliveryPerson should be able to update the order status to "Delivered" when order has been successfully delivered to customer by DeliveryPerson and appropriate amount collected from customer and Shopkeeper should be notified of "Delivered" status change in orderId by DeliveryPerson.
Business Flow
DeliveryPerson has successfully deliverd the order to Customer
DeliveryPerson has collected the invoice amount from the customer
DeliveryPerson has marked the order status as Delivered in the System
DeliveryPerson has marked the Amount Collected for the order in System
Shopkeeper should be notified of this order status change to Delivered
Technical workflow (Web)
Device calls the Update_Order_Status service with the following input parameters
OrderId
OrderStatus
Amount Collected
DeliveryTime (Timestamp while updating the order status to 'Delivered')
Service updates the order status in Order table to 'Delivered'
Service sends a Push notification to Shopkeeper regarding order status change to 'Delivered'
If success, send status as 1
If failure, send status as 0

Technical workflow (Device)
If status is 1
DeliveryPerson should be displayed a success message regarding the order status change
Shopkeeper should receive a notification regarding the order status change
If status is 0
Shopkeeper should be displayed an error screen

27 - Shopkeeper should be able to see OrderDetails, Invoice amount collected and Delivery Time updated by DeliveryPerson while delivering the order to customer after clicking on 'Delivered' order status change notification
Business Flow
Shopkeeper receives an order 'Delivered' when DeliverPerson has 
Technical workflow (Web)

Technical workflow (Device)

28 - DeliveryPerson should be able to get some evidence from customer that he has successfully delivered the order to him. Either in digital form or in form of a duplicate receipt signed by customer.
Business Flow
Technical workflow (Web)
Technical workflow (Device)
29 - Shopkeeper  should be able to update the order status to "Closed" when he has received the appropriate amount from DeliveryPerson after successful delivery of order to customer.
Business Flow
Technical workflow (Web)
Technical workflow (Device)
30 - Shopkeeper and DeliveryPerson both should be able to mark any order as "Disputed" but after successful delivery of the order to customer which is supposed to be looked upon by corresponding SellerHub.
Business Flow
Technical workflow (Web)
Technical workflow (Device)
31 - SellerHub should be able to see a notification when a Shopkeeper and DeliveryPerson marks a OrderID as  "Disputed"
Business Flow
Technical workflow (Web)
Technical workflow (Device)
32 - SellerHub should be able to see the Order details, Shop details, DeliveryPerson and Dispute message details when clicking on notification for "Disputed" order
Business Flow
Technical workflow (Web)
Technical workflow (Device)
33 - Customer should be able to cancel his order before its status got changed to "Shipped"
Business Flow
Technical workflow (Web)
Technical workflow (Device)

